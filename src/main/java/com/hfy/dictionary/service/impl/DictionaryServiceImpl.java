package com.hfy.dictionary.service.impl;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import com.hfy.base.mapper.BaseMapper;import com.hfy.base.service.impl.BaseServiceImpl;import com.hfy.dictionary.entity.Dictionary;import com.hfy.dictionary.mapper.DictionaryMapper;import com.hfy.dictionary.service.DictionaryService;import com.hfy.message.service.MessageResource;/** * 数据字典Service****************************************************************************** * 本程序为深圳浩丰源有限公司开发研制。未经本公司正式书面同意，其他任何个人和团体均不得做任何用途 * 复制、修改或发布本软件. * Copyright (C) 2016 ShenZhen HFY Co.,Ltd * All Rights Reserved. ***************************************************************************** * @author yanning * @date 2016年11月11日 下午1:15:02 * @version 1.0  * */@Servicepublic class DictionaryServiceImpl extends BaseServiceImpl implements DictionaryService{	@Autowired	DictionaryMapper dictionaryMapper;	@Autowired	MessageResource msg;		@Override	public BaseMapper getMapper() {		// TODO Auto-generated method stub		return this.dictionaryMapper;	}	@Override	public Dictionary getDictionary(String code) throws Exception {		// TODO Auto-generated method stub		Map<String, Object> paramMap = new HashMap<String, Object>();		paramMap.put("code", code);		Dictionary dic = dictionaryMapper.getEntityByParam(paramMap);		dic.setName(msg.getMessage(dic.getCode()));		return dic;	}	@Override	public List<Dictionary> getDictionaryList(String code, String type) throws Exception {		// TODO Auto-generated method stub		Map<String, Object> paramMap = new HashMap<String, Object>();		paramMap.put("code", code);		paramMap.put("type", type);		List<Dictionary> dicList = dictionaryMapper.queryList(paramMap);		for (Dictionary dic : dicList) {			dic.setName(msg.getMessage(dic.getCode()));		}		return dicList;	}	@Override	public List<Map<String, Object>> getDictionaryMapList(String code, String type) throws Exception {		// TODO Auto-generated method stub		Map<String, Object> paramMap = new HashMap<String, Object>();		paramMap.put("code", code);		paramMap.put("type", type);		List<Dictionary> dicList = dictionaryMapper.queryList(paramMap);		List<Map<String, Object>> mapList = new ArrayList<Map<String,Object>>();		for (Dictionary dic : dicList) {			Map<String, Object> map = new HashMap<String, Object>();			map.put("name", msg.getMessage(dic.getCode()));			map.put("value", dic.getValue());			mapList.add(map);		}		return mapList;	}	@Override	public List<Dictionary> getDictionaryList(String type, boolean defaultSelect) throws Exception {		// TODO Auto-generated method stub		Map<String, Object> paramMap = new HashMap<String, Object>();		paramMap.put("type", type);		List<Dictionary> dicList = dictionaryMapper.queryList(paramMap);		for (Dictionary dic : dicList) {			dic.setName(msg.getMessage(dic.getCode()));		}		if (defaultSelect) {			Dictionary dic = new Dictionary();			dic.setName(msg.getMessage("common.defaultSelect"));			dicList.add(0, dic);		}		return dicList;	}	@Override	public List<Map<String, Object>> getDictionaryMapList(String type, boolean defaultSelect) throws Exception {		// TODO Auto-generated method stub		Map<String, Object> paramMap = new HashMap<String, Object>();		paramMap.put("type", type);		List<Dictionary> dicList = dictionaryMapper.queryList(paramMap);		List<Map<String, Object>> mapList = new ArrayList<Map<String,Object>>();		if (defaultSelect) {			Map<String, Object> map = new HashMap<String, Object>();			map.put("name", msg.getMessage("common.defaultSelect"));			map.put("value", "");			mapList.add(map);		}		for (Dictionary dic : dicList) {			Map<String, Object> map = new HashMap<String, Object>();			map.put("name", msg.getMessage(dic.getCode()));			map.put("value", dic.getValue());			mapList.add(map);		}		return mapList;	}	}