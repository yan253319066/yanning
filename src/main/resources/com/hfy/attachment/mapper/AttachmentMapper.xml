<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.hfy.attachment.mapper.AttachmentMapper" ><!-- Result Map--><resultMap id="attachment" type="com.hfy.attachment.entity.Attachment" >	<result column="id" property="id"/>	<result column="table_name" property="tableName"/><result column="table_id" property="tableId"/><result column="atta_type" property="attaType"/><result column="atta_old_name" property="attaOldName"/><result column="atta_new_name" property="attaNewName"/><result column="atta_path" property="attaPath"/><result column="atta_format" property="attaFormat"/><result column="atta_remark" property="attaRemark"/><result column="create_date" property="createDate"/><result column="create_by" property="createBy"/><result column="update_date" property="updateDate"/><result column="update_by" property="updateBy"/><result column="is_delete" property="isDelete"/></resultMap><!-- f_order table all fields --><sql id="columnList" >	ba.id,	 ba.table_name, ba.table_id, ba.atta_type, ba.atta_old_name, ba.atta_new_name, ba.atta_path, ba.atta_format, ba.atta_remark, ba.create_date, ba.create_by, ba.update_date, ba.update_by, ba.is_delete</sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="id != null" >	    and ba.id = #{id}	</if>	<if test="tableName != null" >and  ba.table_name = #{tableName}</if><if test="tableId != null" >and  ba.table_id = #{tableId}</if><if test="attaType != null" >and  ba.atta_type = #{attaType}</if><if test="attaOldName != null" >and  ba.atta_old_name = #{attaOldName}</if><if test="attaNewName != null" >and  ba.atta_new_name = #{attaNewName}</if><if test="attaPath != null" >and  ba.atta_path = #{attaPath}</if><if test="attaFormat != null" >and  ba.atta_format = #{attaFormat}</if><if test="attaRemark != null" >and  ba.atta_remark = #{attaRemark}</if><if test="createDate != null" >and  ba.create_date = NOW()</if><if test="createBy != null" >and  ba.create_by = #{createBy}</if><if test="updateDate != null" >and  ba.update_date = NOW()</if><if test="updateBy != null" >and  ba.update_by = #{updateBy}</if><if test="isDelete != null" >and  ba.is_delete = #{isDelete}</if></trim></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="id != null" >	    and ba.id = #{id}	</if>													 			<if test="tableName != null" >and  UPPER(ba.table_name) LIKE   UPPER(CONCAT(CONCAT('%',#{tableName}),'%'))</if><if test="tableId != null" >and  UPPER(ba.table_id) LIKE   UPPER(CONCAT(CONCAT('%',#{tableId}),'%'))</if><if test="attaType != null" >and  UPPER(ba.atta_type) LIKE   UPPER(CONCAT(CONCAT('%',#{attaType}),'%'))</if><if test="attaOldName != null" >and  UPPER(ba.atta_old_name) LIKE   UPPER(CONCAT(CONCAT('%',#{attaOldName}),'%'))</if><if test="attaNewName != null" >and  UPPER(ba.atta_new_name) LIKE   UPPER(CONCAT(CONCAT('%',#{attaNewName}),'%'))</if><if test="attaPath != null" >and  UPPER(ba.atta_path) LIKE   UPPER(CONCAT(CONCAT('%',#{attaPath}),'%'))</if><if test="attaFormat != null" >and  UPPER(ba.atta_format) LIKE   UPPER(CONCAT(CONCAT('%',#{attaFormat}),'%'))</if><if test="attaRemark != null" >and  UPPER(ba.atta_remark) LIKE   UPPER(CONCAT(CONCAT('%',#{attaRemark}),'%'))</if><if test="createDate != null" >and  UPPER(ba.create_date) LIKE   UPPER(CONCAT(CONCAT('%',NOW()),'%'))</if><if test="createBy != null" >and  UPPER(ba.create_by) LIKE   UPPER(CONCAT(CONCAT('%',#{createBy}),'%'))</if><if test="updateDate != null" >and  UPPER(ba.update_date) LIKE   UPPER(CONCAT(CONCAT('%',NOW()),'%'))</if><if test="updateBy != null" >and  UPPER(ba.update_by) LIKE   UPPER(CONCAT(CONCAT('%',#{updateBy}),'%'))</if><if test="isDelete != null" >and  UPPER(ba.is_delete) LIKE   UPPER(CONCAT(CONCAT('%',#{isDelete}),'%'))</if></trim></sql><!-- 插入记录 --><insert id="insert" parameterType="Object" useGeneratedKeys="true" keyProperty="id">  insert into base_attachment (table_name,table_id,atta_type,atta_old_name,atta_new_name,atta_path,atta_format,atta_remark,create_date,create_by,update_date,update_by,is_delete)  values(#{tableName,jdbcType=VARCHAR},#{tableId,jdbcType=VARCHAR},#{attaType,jdbcType=VARCHAR},#{attaOldName,jdbcType=VARCHAR},#{attaNewName,jdbcType=VARCHAR},#{attaPath,jdbcType=VARCHAR},#{attaFormat,jdbcType=VARCHAR},#{attaRemark,jdbcType=VARCHAR},NOW(),#{createBy,jdbcType=VARCHAR},NOW(),#{updateBy,jdbcType=VARCHAR},#{isDelete,jdbcType=VARCHAR})</insert><!-- 批量插入 --><insert id="insertBatch" parameterType="java.util.List">  	insert into base_attachment (table_name,table_id,atta_type,atta_old_name,atta_new_name,atta_path,atta_format,atta_remark,create_date,create_by,update_date,update_by,is_delete)        values     <foreach collection="list" item="item" index="index"  separator="," >           (        #{item.tableName,jdbcType=VARCHAR},#{item.tableId,jdbcType=VARCHAR},#{item.attaType,jdbcType=VARCHAR},#{item.attaOldName,jdbcType=VARCHAR},#{item.attaNewName,jdbcType=VARCHAR},#{item.attaPath,jdbcType=VARCHAR},#{item.attaFormat,jdbcType=VARCHAR},#{item.attaRemark,jdbcType=VARCHAR},NOW(),#{item.createBy,jdbcType=VARCHAR},NOW(),#{item.updateBy,jdbcType=VARCHAR},#{item.isDelete,jdbcType=VARCHAR}          )      </foreach></insert><!-- 修改记录--><update id="update" parameterType="Object" >	update base_attachment set 	<trim  suffixOverrides="," >	<if test="tableName != null ">table_name=#{tableName},</if><if test="tableId != null ">table_id=#{tableId},</if><if test="attaType != null ">atta_type=#{attaType},</if><if test="attaOldName != null ">atta_old_name=#{attaOldName},</if><if test="attaNewName != null ">atta_new_name=#{attaNewName},</if><if test="attaPath != null ">atta_path=#{attaPath},</if><if test="attaFormat != null ">atta_format=#{attaFormat},</if><if test="attaRemark != null ">atta_remark=#{attaRemark},</if>update_date=NOW(),update_by=#{updateBy},	</trim> where id=#{id} </update><!-- 批量修改 --><update id="updateBatch" parameterType="java.util.List">       <foreach collection="list" item="item" index="index" open="" close="" separator=";">         UPDATE base_attachment         <set>              <if test="item.tableName != null ">table_name=#{item.tableName},</if><if test="item.tableId != null ">table_id=#{item.tableId},</if><if test="item.attaType != null ">atta_type=#{item.attaType},</if><if test="item.attaOldName != null ">atta_old_name=#{item.attaOldName},</if><if test="item.attaNewName != null ">atta_new_name=#{item.attaNewName},</if><if test="item.attaPath != null ">atta_path=#{item.attaPath},</if><if test="item.attaFormat != null ">atta_format=#{item.attaFormat},</if><if test="item.attaRemark != null ">atta_remark=#{item.attaRemark},</if>update_date=NOW(),update_by=#{item.updateBy},       </set>         WHERE id = item.id=#{id}      </foreach>  </update>  <!-- 删除记录 --><delete id="deleteById" parameterType="Object">	delete from base_attachment where id = #{id}</delete><delete id="deleteByParam" parameterType="Object">delete from base_attachment where table_id = #{tableId} and table_name = #{tableName} and atta_type = #{attaType}</delete><delete id="deleteByEntity" parameterType="Object"></delete><!-- 批量删除 --><delete id="deleteBatch" parameterType="java.util.List">	delete from base_attachment where id in	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">          #{item}      </foreach></delete><!-- 查询单个实体 --><select id="getEntityById"  resultMap="attachment" parameterType="Object">	select <include refid="columnList" /> 	from base_attachment  ba	where  bu.id = #{id}</select><select id="getEntityByParam"  resultMap="attachment" parameterType="Object">	select <include refid="columnList" /> 	from base_attachment ba	<include refid="whereClause"/></select><select id="getEntity"  resultMap="attachment" parameterType="Object">	select <include refid="columnList" /> 	from base_attachment ba	<include refid="whereClause"/></select><!-- 列表总数--><select id="count" resultType="java.lang.Long"  parameterType="Object">	select count(1) 	from base_attachment ba	<include refid="whereClause"/></select><!-- 查询列表  返回List<ENTITY>--><select id="queryList" resultMap="attachment"  parameterType="Object">	select 	<include refid="columnList"/>	from base_attachment ba	<include refid="whereClause"/></select><!-- 查询列表  返回List<Map<String,Object>>--><select id="queryListMap" resultType="java.util.HashMap"  parameterType="Object">	select 	<include refid="columnList"/>	from base_attachment ba	<include refid="whereClause"/></select><!-- 模糊查询列表  返回List<ENTITY>--><select id="queryListByLike" resultMap="attachment"  parameterType="Object">	select 	<include refid="columnList"/>	from base_attachment ba	<include refid="whereLikeClause"/></select><!-- 模糊查询列表  返回List<Map<String,Object>>--><select id="queryListMapByLike" resultType="java.util.HashMap"  parameterType="Object">	select 	<include refid="columnList"/>	from base_attachment ba	<include refid="whereLikeClause"/></select></mapper>