<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.hfy.dictionary.mapper.DictionaryMapper" ><!-- Result Map--><resultMap id="dictionary" type="com.hfy.dictionary.entity.Dictionary" >	<result column="id" property="id"/>	<result column="name" property="name"/><result column="code" property="code"/><result column="value" property="value"/><result column="type" property="type"/><result column="remark" property="remark"/><result column="create_date" property="createDate"/><result column="create_by" property="createBy"/><result column="update_date" property="updateDate"/><result column="update_by" property="updateBy"/></resultMap><!-- f_order table all fields --><sql id="columnList" >	bd.id,	 bd.name, bd.code, bd.value, bd.type, bd.remark, bd.create_date, bd.create_by, bd.update_date, bd.update_by</sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="id != null" >	    and bd.id = #{id}	</if>	<if test="name != null" >and  bd.name = #{name}</if><if test="code != null" >and  bd.code = #{code}</if><if test="value != null" >and  bd.value = #{value}</if><if test="type != null" >and  bd.type = #{type}</if><if test="remark != null" >and  bd.remark = #{remark}</if><if test="createDate != null" >and  bd.create_date = NOW()</if><if test="createBy != null" >and  bd.create_by = #{createBy}</if><if test="updateDate != null" >and  bd.update_date = NOW()</if><if test="updateBy != null" >and  bd.update_by = #{updateBy}</if></trim></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="id != null" >	    and bd.id = #{id}	</if>													 			<if test="name != null" >and  UPPER(bd.name) LIKE   UPPER(CONCAT(CONCAT('%',#{name}),'%'))</if><if test="code != null" >and  UPPER(bd.code) LIKE   UPPER(CONCAT(CONCAT('%',#{code}),'%'))</if><if test="value != null" >and  UPPER(bd.value) LIKE   UPPER(CONCAT(CONCAT('%',#{value}),'%'))</if><if test="type != null" >and  UPPER(bd.type) LIKE   UPPER(CONCAT(CONCAT('%',#{type}),'%'))</if><if test="remark != null" >and  UPPER(bd.remark) LIKE   UPPER(CONCAT(CONCAT('%',#{remark}),'%'))</if><if test="createDate != null" >and  UPPER(bd.create_date) LIKE   UPPER(CONCAT(CONCAT('%',NOW()),'%'))</if><if test="createBy != null" >and  UPPER(bd.create_by) LIKE   UPPER(CONCAT(CONCAT('%',#{createBy}),'%'))</if><if test="updateDate != null" >and  UPPER(bd.update_date) LIKE   UPPER(CONCAT(CONCAT('%',NOW()),'%'))</if><if test="updateBy != null" >and  UPPER(bd.update_by) LIKE   UPPER(CONCAT(CONCAT('%',#{updateBy}),'%'))</if></trim></sql><!-- 插入记录 --><insert id="insert" parameterType="Object" useGeneratedKeys="true" keyProperty="id">  insert into base_dictionary (name,code,value,type,remark,create_date,create_by,update_date,update_by)  values(#{name,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR},#{value,jdbcType=VARCHAR},#{type,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},NOW(),#{createBy,jdbcType=VARCHAR},NOW(),#{updateBy,jdbcType=VARCHAR})</insert><!-- 批量插入 --><insert id="insertBatch" parameterType="java.util.List">  	insert into base_dictionary (name,code,value,type,remark,create_date,create_by,update_date,update_by)        values     <foreach collection="list" item="item" index="index"  separator="," >           (        #{item.name,jdbcType=VARCHAR},#{item.code,jdbcType=VARCHAR},#{item.value,jdbcType=VARCHAR},#{item.type,jdbcType=VARCHAR},#{item.remark,jdbcType=VARCHAR},NOW(),#{item.createBy,jdbcType=VARCHAR},NOW(),#{item.updateBy,jdbcType=VARCHAR}          )      </foreach></insert><!-- 修改记录--><update id="update" parameterType="Object" >	update base_dictionary set 	<trim  suffixOverrides="," >	<if test="name != null ">name=#{name},</if><if test="code != null ">code=#{code},</if><if test="value != null ">value=#{value},</if><if test="type != null ">type=#{type},</if><if test="remark != null ">remark=#{remark},</if>update_date=NOW(),update_by=#{updateBy},	</trim> where id=#{id} </update><!-- 批量修改 --><update id="updateBatch" parameterType="java.util.List">       <foreach collection="list" item="item" index="index" open="" close="" separator=";">         UPDATE base_dictionary         <set>              <if test="item.name != null ">name=#{item.name},</if><if test="item.code != null ">code=#{item.code},</if><if test="item.value != null ">value=#{item.value},</if><if test="item.type != null ">type=#{item.type},</if><if test="item.remark != null ">remark=#{item.remark},</if>update_date=NOW(),update_by=#{item.updateBy},       </set>         WHERE id = item.id=#{id}      </foreach>  </update>  <!-- 删除记录 --><delete id="deleteById" parameterType="Object">	delete from base_dictionary where id = #{id}</delete><delete id="deleteByParam" parameterType="Object"></delete><delete id="deleteByEntity" parameterType="Object"></delete><!-- 批量删除 --><delete id="deleteBatch" parameterType="java.util.List">	delete from base_dictionary where id in	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">          #{item}      </foreach></delete><!-- 查询单个实体 --><select id="getEntityById"  resultMap="dictionary" parameterType="Object">	select <include refid="columnList" /> 	from base_dictionary  bd	where  bu.id = #{id}</select><select id="getEntityByParam"  resultMap="dictionary" parameterType="Object">	select <include refid="columnList" /> 	from base_dictionary bd	<include refid="whereClause"/></select><select id="getEntity"  resultMap="dictionary" parameterType="Object">	select <include refid="columnList" /> 	from base_dictionary bd	<include refid="whereClause"/></select><!-- 列表总数--><select id="count" resultType="java.lang.Long"  parameterType="Object">	select count(1) 	from base_dictionary bd	<include refid="whereClause"/></select><!-- 查询列表  返回List<ENTITY>--><select id="queryList" resultMap="dictionary"  parameterType="Object">	select 	<include refid="columnList"/>	from base_dictionary bd	<include refid="whereClause"/></select><!-- 查询列表  返回List<Map<String,Object>>--><select id="queryListMap" resultType="java.util.HashMap"  parameterType="Object">	select 	<include refid="columnList"/>	from base_dictionary bd	<include refid="whereClause"/></select><!-- 模糊查询列表  返回List<ENTITY>--><select id="queryListByLike" resultMap="dictionary"  parameterType="Object">	select 	<include refid="columnList"/>	from base_dictionary bd	<include refid="whereLikeClause"/></select><!-- 模糊查询列表  返回List<Map<String,Object>>--><select id="queryListMapByLike" resultType="java.util.HashMap"  parameterType="Object">	select 	<include refid="columnList"/>	from base_dictionary bd	<include refid="whereLikeClause"/></select></mapper>